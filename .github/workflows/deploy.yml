name: Deploy Node.js API

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t bharath7898/my-api:v1.0.0 .
          docker push bharath7898/my-api:v1.0.0

      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST <<EOF
            # Update the package index
            sudo dnf update -y

            # Install Docker
            sudo dnf install docker -y

            # Start the Docker service
            sudo systemctl start docker

            # Add the ec2-user to the docker group
            sudo usermod -a -G docker $EC2_USER

            # Enable Docker to start on boot
            sudo systemctl enable docker
          EOF

      - name: Restart SSH Session
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST <<EOF
            # Pull the latest Docker image
            docker pull bharath7898/my-api:v1.0.0

            # Stop and remove any existing container
            docker stop my-api || true
            docker rm my-api || true

            # Run MongoDB container
            docker run -d --name mongodb -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin -e MONGO_INITDB_DATABASE=mydatabase -p 27017:27017 mongo:4.4.6

            # Run the application container
            docker run -d --name my-api -p 80:3000 --link mongodb -e MONGODB_URI=mongodb://admin:admin@mongodb:27017/mydatabase bharath7898/my-api:v1.0.0
          EOF